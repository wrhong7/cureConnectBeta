{
  "_args": [
    [
      "s3-policy",
      "/Users/rh/nurseStaffingProject/jsOnBoardingSite"
    ]
  ],
  "_from": "s3-policy@latest",
  "_id": "s3-policy@0.2.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/s3-policy",
  "_npmUser": {
    "email": "tj@vision-media.ca",
    "name": "tjholowaychuk"
  },
  "_npmVersion": "1.3.15",
  "_phantomChildren": {},
  "_requested": {
    "name": "s3-policy",
    "raw": "s3-policy",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/s3-policy/-/s3-policy-0.2.0.tgz",
  "_shasum": "83c345301aefec7489ce69e26a5153935065b8ac",
  "_shrinkwrap": null,
  "_spec": "s3-policy",
  "_where": "/Users/rh/nurseStaffingProject/jsOnBoardingSite",
  "author": {
    "email": "tj@vision-media.ca",
    "name": "TJ Holowaychuk"
  },
  "bugs": {
    "url": "https://github.com/visionmedia/node-s3-policy/issues"
  },
  "dependencies": {},
  "description": "S3 policy generation for client-side uploads",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "83c345301aefec7489ce69e26a5153935065b8ac",
    "tarball": "https://registry.npmjs.org/s3-policy/-/s3-policy-0.2.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/visionmedia/node-s3-policy",
  "keywords": [
    "s3",
    "policy"
  ],
  "main": "index",
  "maintainers": [
    {
      "email": "tj@vision-media.ca",
      "name": "tjholowaychuk"
    }
  ],
  "name": "s3-policy",
  "optionalDependencies": {},
  "readme": "\n# s3-policy\n\n  [S3 policy][] generation for client-side uploads. By default, `Content-Type` and\n  `Content-Length` form fields are __required__, but can contain any value.\n\n## Options\n\nCreate an s3 policy and signature via `opts`:\n\n - `acl` acl such as \"public-read\"\n - `expires` expiration date\n - `secret` s3 secret\n - `bucket` bucket name\n - `key` access key\n - `name` restrict key to prefix [\"\"]\n - `type` restrict content-type prefix [\"\"]\n - `length` max size restriction\n - `conditions` an optional Array of custom \"conditions\" to include in the policy\n\nAn object with `.signature` and `.policy` is returned.\n\n## Example\n\n```js\nvar policy = require('s3-policy');\n\nvar p = policy({\n  secret: 'something',\n  length: 5000000,\n  bucket: 'i.cloudup.com',\n  key: 'asdfasdfaewrw',\n  expires: new Date(Date.now() + 60000),\n  acl: 'public-read'\n});\n\nconsole.log(p.policy);\nconsole.log(p.signature);\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[S3 policy]: http://docs.aws.amazon.com/AmazonS3/latest/dev/HTTPPOSTForms.html#HTTPPOSTConstructPolicy\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/visionmedia/node-s3-policy.git"
  },
  "version": "0.2.0"
}
